version: '3.4'

services:
  gatewayapi:
    container_name: poc-gateway-api
    image: ${DOCKER_REGISTRY-}gatewayapi
    build:
      context: .
      dockerfile: src/GatewayApi/Dockerfile
    

  collector:    
    container_name: poc-collector
    image: otel/opentelemetry-collector-contrib:0.42.0
    ports:
      - 4317:4317
      - 8888:8888 # Collectors prometheus endpoint -- for metrics from the collector itself.  See: /telemtry/otel-collector/otel-collector.yaml
      - 8889:8889 # Exposed prometheus endpoint which contains the metrics that were scraped from the GatewayApi. -- See: /telemtry/otel-collector/otel-collector.yaml
      
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - "./telemetry/otel-collector:/etc"
    networks:
      - poc-network

  jaeger:
    container_name: poc-jaeger
    image: jaegertracing/all-in-one:1.25
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    networks:
      - poc-network

  prometheus:
    container_name: poc-prometheus
    image: prom/prometheus:v2.21.0
    ports:
      - 9090:9090
    depends_on:
      - collector
    volumes:
      - "./telemetry/prometheus:/etc/prometheus"
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
    #--web.enable-lifecycle allows reloading of prometheus.yml without restarting the container
    #--config.file specifies the location of the prometheus configuration file
    networks:
      - poc-network

  influxdb:
    container_name: poc-influxdb
    image: influxdb:1.7
    restart: always
    ports:
      - "8086:8086"
    volumes:
      - "./telemetry/influxdb/influxdb-storage:/var/lib/influxdb"
    environment:
      INFLUXDB_DB: actualdb
    networks:
      - poc-network

  grafana:
    container_name: poc-grafana
    image: grafana/grafana
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - influxdb
      - prometheus
    volumes:
      - "./telemetry/grafana/var/lib/grafana:/var/lib/grafana"
      - "./telemetry/grafana/etc/grafana:/etc/grafana"
    networks:
      - poc-network

networks:
  poc-network:
    driver: bridge